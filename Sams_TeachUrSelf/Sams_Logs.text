Chapters:
01,02,04,05,07


Day_01

>> To open the file using powershell type "ii filenmae.text"
>> <a> </a> the 'a' stands for word anchor
	>> <a> has a attribute href=""
>> To make a button press to go to a link place it as 
	<a href="link"> <button>GO TO</button> </a> 
>> <a href="mailto:youremail@domain.com"> This will link to your mail address </a> 
>> <hr> to create a horizontal line
>> <h1> To create a Heading </h1>
>> To get a YT video on to the web page	
	>>Share--> Embed --> copy the code and paste it
	>> But if the owners of the video havent given the allow embedded video option then it cant be used
>> This code will make sure that webpage will fit into all the devices without a problem	
	<meta charset="UTF-8">
     	<meta name="viewport"
              content="width=device-width, initial-scale=1.0">

Day_02

>>FrontEnd
	>> React.js
	>> Node.js
	>> Tailwind css
	>> daisyui

>>Backend 
	>> Next js API
	>> MongoDB
	>> Mailgun
	>> Stripe

Day_03:
>> JS INTRO
	>>var currentTime = new Date();
	>> document.write(currentTime);
		>> send output as part of the web document.
	>> To break a line inside <script> tag --> ("<br>"+variable_name)
	>> can use separate javascript files so that html file would not look very confusing.
		>> include <script src="filename.js"></script>
	>> To get a input field in the HTML
		>> <input id="id_to_call_text" type="text">
	>> to get the current time we can use now = new Date();
		>> now.getHours()
		>> now.getMinutes()
		>> now.getSeconds() 

Day_04:
>> JS INTRO
	>> Objects
	 >> document.write (write method of object document)
	 >> Data stored in a object is called property
	 >> to call a object property/properties ObjectName.PropertyName -> (Bob.phone_num)
	 >> objects can include methods. 
		>> method is a function inside an object
		>> document.write() write is a (function saved inside the object document) and its called a method.
       >> we use conditionals as event handlers --> what to do if something comes up.
       >> for(executed(one_time)_before_execution_of_code_block,
		conditon_for_executing, executed_after_everytime_code_block_has_been_executed)  
	>>for(i=0;i<=10;i++){code_block}
	>>Example of event handler
		>> <button onmouseover="alert('on button')">SEND MAIL</button>
		>> onclick="" is also an example of evnt handler	
		>> when mouse is over the button an alert will be triggered.
		>> with (onmouseover) event handler we could count how many times a person will point 
		   at a certain object on web page.

Day_05:
>> Using separate .JS files --> advantage ==> can link to same .js file from two or more html documents.
	>> because the browser stores this file in its cache, the time it takes to load webpage will be reduced.

Day_06:
>> to set a time out --> setTimeout(function_need_to_run, time_in_miliseconds)
>> to set a time limit and recursive event --> setInterval(function_need_to_run, time_in_miliseconds)

Day_07:
>> parseInt("30 days of JS") will return the interger in the string which is --> '30'
>> stringTest.substring(0,5) --> return the strings characters indexing from 0 to 5 excluding 5.
>> string indexing starts from 0.
>> stringTest.charArt(0) --> return first character or 0th indexed character.
>> spaces are counted and taken as a index too
>> stringTest.indexOf('world',10) show the index of the word world after index 10 which is first occurence
>> stringTest.lastIndexOf("world") give occurence of the last 
>> to create an array --> scores = [1,3,3,45,55]
>> string.split(seperator:string) --> will separate the string.
	>> names.split(" ")
>> string.join(joiners:string) --> will join the separated parts.
	>> parts.join(" ** ") --> will be joined by ** in the middle
>> sortedNames = names.sort() --> will sort out arrays.







